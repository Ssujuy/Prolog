Μία εκδοχή του προβλήματος διαμέρισης αριθμών είναι η εξής. Δεδομένου κάποιου
άρτιου θετικού ακεραίου 𝑁, να διαμερισθεί το σύνολο 𝑆 = {1, 2, 3, ... , 𝑁} σε δύο
υποσύνολα 𝑆1 και 𝑆2 (𝑆1 ∩ 𝑆2 = ∅, 𝑆1 ∪ 𝑆2 = 𝑆) τέτοια ώστε τα S1 και S2 να έχουν
ίδιο πλήθος στοιχείων (|𝑆1| = |𝑆2|), το άθροισμα των στοιχείων του 𝑆1 να ισούται με
το άθροισμα των στοιχείων του 𝑆2 (∑ 𝑖 = ∑ 𝑗𝑗∈𝑆2𝑖 ∈𝑆1 ) και το άθροισμα των
τετραγώνων των στοιχείων του 𝑆1 να ισούται με το άθροισμα των τετραγώνων των
στοιχείων του 𝑆2 (∑ 𝑖2 = ∑ 𝑗2
𝑗∈𝑆2𝑖 ∈𝑆1 ). Για παράδειγμα, για 𝑁 = 8, το πρόβλημα
έχει μία λύση, την 𝑆1 = {1, 4, 6, 7}, 𝑆2 = {2, 3, 5, 8}. Είναι προφανές ότι το πρόβλημα
δεν έχει λύση αν το 𝑁 είναι περιττός. Επίσης, φαίνεται ότι υπάρχουν λύσεις μόνο για
𝑁 που είναι πολλαπλάσια του 4 και μεγαλύτερα ή ίσα του 8, αλλά κάτι τέτοιο δεν έχει
αποδειχθεί μαθηματικά.
Page 2 of 14
Ορίστε στο σύστημα λογικού προγραμματισμού της επιλογής σας ένα κατηγόρημα
numpart/3, το ποίο όταν καλείται σαν numpart(N, L1, L2), για δεδομένο N, να
επιστρέφει στα L1 και L2, μία διαμέριση του συνόλου {1, 2, 3, ..., N}, σύμφωνα με
τον παραπάνω ορισμό, και τελικά, μέσω οπισθοδρόμησης, όλες τις διαφορετικές
λύσεις. Κάποια παραδείγματα εκτέλεσης είναι τα εξής:


/*finds list of length Len , if Len is 4 list is [1,2,3,4]*/

ordered_list(Len,Counter,Ordered) :-
    Counter =< Len,
    [H | T] = Ordered,
    H = Counter,
    NCounter is Counter + 1,
    ordered_list(Len,NCounter,T).

ordered_list(Len,Counter,[]) :- Len < Counter.